@inherits LayoutComponentBase

<MudThemeProvider Theme="_currentTheme" DefaultScrollbar="true" />
<MudPopoverProvider/>
<MudDialogProvider/>
<MudSnackbarProvider/>

<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@(() => { DrawerOpen ^= true; })" />
        <MudText Typo="Typo.h5" Class="ml-3">@Title</MudText>
        <MudSpacer />
        <MudTooltip Text="Visit project on Github">
            <MudIconButton Icon="@Icons.Custom.Brands.GitHub" Color="Color.Inherit" Edge="Edge.End" Href="https://github.com/mystyq/TaskSystem"/>
        </MudTooltip>
    </MudAppBar>
    <MudDrawer @bind-Open="@DrawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <NavMenu />
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.ExtraExtraLarge" Class="mt-5">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

@implements IDisposable
@inject UpdateTitleService UpdateTitleService
@code {
    private string Title { get; set; } = string.Empty;

    private bool DrawerOpen { get; set; } = true;

    private readonly MudTheme _currentTheme = new()
        {
            PaletteLight = new PaletteLight()
            {
                Primary = "#056757",
                Secondary = Colors.Gray.Darken3,
                AppbarBackground = "#002d38",
            }
        };

    protected override void OnInitialized()
    {
        UpdateTitleService.UpdateTitleChanged += HandleUpdateTitleChanged!;
        base.OnInitialized();
    }

    private void HandleUpdateTitleChanged(object sender, UpdateTitleService.UpdateTitleEventArgs args)
    {
        this.Title = args.Title!;
        InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        if (UpdateTitleService is not null)
        {
            UpdateTitleService.UpdateTitleChanged -= HandleUpdateTitleChanged!;
        }
    }
}